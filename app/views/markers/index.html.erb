<%- model_class = Marker -%>
<div class="page-header">
  <h1>My Google Maps Demo</h1>
</div>
    <div>
     <input type="text" id="addressInput" size="10"/>
    <select id="radiusSelect">
      <option value="25" selected>25mi</option>
      <option value="100">100mi</option>
      <option value="200">200mi</option>
    </select>

    <input type="button" onclick="searchLocations()" value="Search"/>
    </div>
    <div id="map"></div>
    <script>
      function initMap() {
        var directionsService = new google.maps.DirectionsService();
        var usa = {lat: 41.850033, lng: -87.6500523};
        var infoWindow = new google.maps.InfoWindow({map: map});

        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 12,
          center: usa
        });

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            position = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            infoWindow.setPosition(position);
            infoWindow.setContent('Location found.');
            map.setCenter(position);

            var personIcon = 'https://maps.google.com/mapfiles/kml/shapes/library_maps.png';
            var userPositionMarker = new google.maps.Marker({
              position: position,
              map: map,
              icon: personIcon
            });
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
          infoWindow.setPosition(pos);
          infoWindow.setContent(browserHasGeolocation ?
                                'Error: The Geolocation service failed.' :
                                'Error: Your browser doesn\'t support geolocation.');
        }

        
        function geocodeLatLng(geocoder, map, infowindow) {
          geocoder.geocode({'location': pos}, function(results, status) {
            if (status === 'OK') {
              if (results[1]) {
                map.setZoom(11);
                var marker = new google.maps.Marker({
                  position: pos,
                  map: map
                });
                infowindow.setContent(results[1].formatted_address);
                infowindow.open(map, marker);
              } else {
                window.alert('No results found');
              }
            } else {
              window.alert('Geocoder failed due to: ' + status);
            }
          });
        }
        
        var locations = [];
        <% @markers.each do |marker| %>
          locations.push(["<%=marker.name%>", "<%=marker.address%>", <%=marker.lat%>, <%=marker.lng%>]);
        <% end %>

        var marker, i;

    for (i = 0; i < locations.length; i++) {  
        marker = new google.maps.Marker({
             position: new google.maps.LatLng(locations[i][2], locations[i][3]),
             title: locations[i][0],
             map: map
        });
      }
  }

  function searchLocationsNear(center) {
    clearLocations();

    var radius = document.getElementById('radiusSelect').value;
    var searchUrl = 'phpsqlajax_search.php?lat=' + center.lat() + '&lng=' + center.lng() + '&radius=' + radius;
    downloadUrl(searchUrl, function(data) {
    var xml = parseXml(data);
    var markerNodes = xml.documentElement.getElementsByTagName("marker");
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0; i < markerNodes.length; i++) {
      var name = markerNodes[i].getAttribute("name");
      var address = markerNodes[i].getAttribute("address");
      var distance = parseFloat(markerNodes[i].getAttribute("distance"));
      var latlng = new google.maps.LatLng(
          parseFloat(markerNodes[i].getAttribute("lat")),
          parseFloat(markerNodes[i].getAttribute("lng")));

      createOption(name, distance, i);
      createMarker(latlng, name, address);
      bounds.extend(latlng);
    }
    map.fitBounds(bounds);
   });
  }

  function clearLocations() {
    infoWindow.close();
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    markers.length = 0;

    /*locationSelect.innerHTML = "";
    var option = document.createElement("option");
    option.value = "none";
    option.innerHTML = "See all results:";
    locationSelect.appendChild(option);
    locationSelect.style.visibility = "visible";*/
  }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCmqGGb2Z4_Rkr-gC_i7z50YyQ71Dr6yHk&callback=initMap"
    async defer></script>
